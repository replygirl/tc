{
  "name": "@replygirl/tc",
  "version": "0.0.0",
  "description": "destructurable, async-friendly `try...catch` wrapper function with support for error side effects and fallback values",
  "main": "dist/index.js",
  "module": "dist/tc.esm.js",
  "browser": "dist/tc.iife.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "watch": "tsc -w",
    "test": "nyc ts-mocha",
    "build:types": "tsc --emitDeclarationOnly",
    "build:js": "rollup -c rollup.config.ts; rollup -c rollup.config.browser.ts",
    "build": "yarn build:types; yarn build:js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/replygirl/tc.git"
  },
  "keywords": [
    "async",
    "await",
    "awaitable",
    "promise",
    "try",
    "catch",
    "wrapper",
    "function",
    "fallback",
    "error handling",
    "destructure",
    "destructuring",
    "functional",
    "utility",
    "helper"
  ],
  "author": {
    "name": "replygirl",
    "email": "moon@moon.fyi"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/replygirl/tc/issues"
  },
  "homepage": "https://github.com/replygirl/tc#readme",
  "devDependencies": {
    "@antfu/eslint-config-ts": "^0.6.6",
    "@babel/core": "^7.14.6",
    "@babel/preset-env": "^7.14.7",
    "@babel/preset-typescript": "^7.14.5",
    "@rollup/plugin-babel": "^5.3.0",
    "@rollup/plugin-commonjs": "^19.0.0",
    "@rollup/plugin-node-resolve": "^13.0.0",
    "@rollup/plugin-typescript": "^8.2.1",
    "@types/babel__core": "^7",
    "@types/babel__preset-env": "^7",
    "@types/eslint": "^7.2.13",
    "@types/eslint-config-prettier": "^6.11.0",
    "@types/eslint-plugin-prettier": "^3",
    "@types/mocha": "^8.2.2",
    "@types/node": "^16.0.0",
    "@types/prettier": "^2.3.1",
    "@typescript-eslint/eslint-plugin": "^4.28.1",
    "@typescript-eslint/parser": "^4.28.1",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-import-resolver-node": "^0.3.4",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-html": "^6.1.2",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jsonc": "^1.4.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-promise": "^5.1.0",
    "eslint-plugin-unicorn": "^34.0.1",
    "eslint-plugin-yml": "^0.9.0",
    "jsonc-eslint-parser": "^1.1.0",
    "mocha": "^9.0.2",
    "nyc": "^15.1.0",
    "prettier": "^2.3.2",
    "rollup": "^2.52.7",
    "rollup-plugin-terser": "^7.0.2",
    "source-map-support": "^0.5.19",
    "ts-mocha": "next",
    "ts-node": "^10.0.0",
    "typescript": "^4.3.5"
  },
  "engines": {
    "node": ">=12.x"
  },
  "files": [
    "dist/**/*"
  ],
  "eslintConfig": {
    "plugins": [
      "prettier"
    ],
    "extends": [
      "@antfu/eslint-config-ts",
      "plugin:prettier/recommended"
    ],
    "rules": {
      "complexity": [
        "error",
        {
          "max": 3
        }
      ],
      "import/order": [
        "error",
        {
          "alphabetize": {
            "order": "asc",
            "caseInsensitive": false
          },
          "groups": [
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
              "index"
            ],
            "object",
            "unknown"
          ],
          "newlines-between": "always",
          "pathGroups": [
            {
              "pattern": "@/**",
              "group": "internal"
            },
            {
              "pattern": "virtual:*",
              "group": "internal"
            }
          ],
          "pathGroupsExcludedImportTypes": [
            "builtin",
            "object"
          ]
        }
      ],
      "prettier/prettier": "error"
    }
  },
  "prettier": {
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false,
    "semi": false,
    "singleQuote": true,
    "quoteProps": "as-needed",
    "trailingComma": "es5",
    "bracketSpacing": true,
    "arrowParens": "avoid",
    "requirePragma": false,
    "insertPragma": false,
    "proseWrap": "preserve",
    "endOfLine": "lf",
    "embeddedLanguageFormatting": "off"
  },
  "nyc": {
    "extension": [
      ".ts"
    ],
    "include": [
      "src"
    ],
    "exclude": [
      "**/*.d.ts"
    ],
    "reporter": [
      "lcov"
    ],
    "all": true
  },
  "dependenciesMeta": {
    "mocha@9.0.2": {
      "unplugged": true
    }
  }
}
